name: Rocket
options:
  deploymentTarget:
    iOS: "13.0"
  bundleIdPrefix: band.rocketfor
packages:
  Endpoint:
    path: Libraries/rocket-api/Modules/Endpoint
  DomainEntity:
    path: Libraries/rocket-api/Modules/DomainEntity
  StubKit:
    url: https://github.com/kateinoigakukun/StubKit.git
    minorVersion: 0.1.7
settings:
  base:
    DEBUG_INFORMATION_FORMAT: dwarf-with-dsym
targets:
  InternalDomain:
    type: library.static
    platform: iOS
    sources: [Targets/InternalDomain]
    dependencies:
      - package: DomainEntity
  ImagePipeline:
    type: library.static
    platform: iOS
    sources: [Targets/ImagePipeline]
  Networking:
    type: library.static
    platform: iOS
    sources: [Targets/Networking]
    dependencies:
      - package: DomainEntity
      - package: Endpoint
      - target: InternalDomain
  UIComponent:
    type: library.static
    platform: iOS
    sources: [Targets/UIComponent]
    dependencies:
      - package: Endpoint
      - package: DomainEntity
      - target: InternalDomain
      - target: ImagePipeline
  UIComponentPreview:
    type: application
    platform: iOS
    sources: [Targets/UIComponent, Targets/UIComponentPreview]
    settings:
      base:
        INFOPLIST_FILE: Targets/UIComponentPreview/Info.plist
        DEVELOPMENT_ASSET_PATHS: Targets/UIComponentPreview/PreviewContent
        ENABLE_PREVIEWS: YES
        SWIFT_ACTIVE_COMPILATION_CONDITIONS: PREVIEW
        IPHONEOS_DEPLOYMENT_TARGET: "14.0"
    dependencies:
      - package: Endpoint
      - package: DomainEntity
      - target: InternalDomain
      - package: StubKit
      - target: ImagePipeline
  Rocket-Production:
    templates: [RocketTarget]
    sources:
      - path: Targets/Rocket/FirebaseConfig/Production
        group: Targets/Rocket/FirebaseConfig
    settings:
      base:
        PRODUCT_BUNDLE_IDENTIFIER: band.rocketfor
        MARKETING_VERSION: 3.0.0
        CURRENT_PROJECT_VERSION: 6
        SWIFT_ACTIVE_COMPILATION_CONDITIONS: PRODUCTION
  Rocket-Staging:
    templates: [RocketTarget]
    sources:
      - path: Targets/Rocket/FirebaseConfig/Development
        group: Targets/Rocket/FirebaseConfig
    settings:
      base:
        PRODUCT_BUNDLE_IDENTIFIER: band.rocketfor.dev
        MARKETING_VERSION: 3.0.0
        CURRENT_PROJECT_VERSION: 6
        SWIFT_ACTIVE_COMPILATION_CONDITIONS: STAGING
  Rocket-Development:
    templates: [RocketTarget]
    sources:
      - path: Targets/Rocket/FirebaseConfig/Development
        group: Targets/Rocket/FirebaseConfig
    settings:
      base:
        PRODUCT_BUNDLE_IDENTIFIER: band.rocketfor.dev
        MARKETING_VERSION: 3.0.0
        CURRENT_PROJECT_VERSION: 6
        SWIFT_ACTIVE_COMPILATION_CONDITIONS: DEVELOPMENT
  RocketTests:
    type: bundle.unit-test
    platform: iOS
    settings:
      base:
        WRAPPER_EXTENSION: xctest
    configFiles:
      Debug: Pods/Target Support Files/Pods-RocketTests/Pods-RocketTests.debug.xcconfig
      Release: Pods/Target Support Files/Pods-RocketTests/Pods-RocketTests.release.xcconfig
    sources: [Targets/RocketTests]
    dependencies:
      - target: Rocket-Development
      - package: StubKit
      - framework: Pods_RocketTests.framework
        implicit: true
        embed: false


targetTemplates:
  RocketTarget:
    type: application
    platform: iOS
    scheme:
      testTargets:
        - RocketTests
      commandLineArguments:
        "-FIRDebugDisabled": true
        "-FIRAnalyticsDebugDisabled": true
    settings:
      base:
        DEVELOPMENT_TEAM: 42H4TC9UM5
        VERSIONING_SYSTEM: apple-generic
        CURRENT_PROJECT_VERSION: 1
        PRODUCT_MODULE_NAME: Rocket
      Debug:
        ENABLE_TESTABILITY: YES
    configFiles:
      Debug: Pods/Target Support Files/Pods-Rocket/Pods-Rocket.debug.xcconfig
      Release: Pods/Target Support Files/Pods-Rocket/Pods-Rocket.release.xcconfig
    entitlements:
      path: Targets/Rocket/Rocket.entitlements
      properties:
        aps-environment: production
        keychain-access-groups: []
    sources:
      - path: Targets/Rocket
        excludes: [FirebaseConfig]
      - path: Targets/Rocket/Generated/Assets.swift
        group: Targets/Rocket/Generated
        optional: true
    preBuildScripts:
      - name: "SwiftGen"
        path: /bin/sh
        script: |
          if [[ -f "${PODS_ROOT}/SwiftGen/bin/swiftgen" ]]; then
            "${PODS_ROOT}/SwiftGen/bin/swiftgen"
          else
            echo "warning: SwiftGen is not installed. Run 'pod install --repo-update' to install it."
          fi
        outputFiles:
          - "$(SRCROOT)/Targets/Rocket/Generated/Assets.swift"
      - name: "[CP] Check Pods Manifest.lock"
        path: /bin/sh
        script: |
          diff "${PODS_PODFILE_DIR_PATH}/Podfile.lock" "${PODS_ROOT}/Manifest.lock" > /dev/null
          if [ $? != 0 ] ; then
              # print error to STDERR
              echo "error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation." >&2
              exit 1
          fi
          # This output is used by Xcode 'outputs' to avoid re-running this script phase.
          echo "SUCCESS" > "${SCRIPT_OUTPUT_FILE_0}"
        inputFiles:
          - "${PODS_PODFILE_DIR_PATH}/Podfile.lock"
          - "${PODS_ROOT}/Manifest.lock"
        outputFiles:
          - "$(DERIVED_FILE_DIR)/Pods-Rocket-checkManifestLockResult.txt"
    postCompileScripts:
      - name: "[CP] Embed Pods Frameworks"
        path: /bin/sh
        script: '"${PODS_ROOT}/Target Support Files/Pods-Rocket/Pods-Rocket-frameworks.sh"'
      - name: "[CP] Copy Pods Resources"
        path: /bin/sh
        script: |
          if [ -f '"${PODS_ROOT}/Target Support Files/Pods-Rocket/Pods-Rocket-resources.sh"' ]; then
            '"${PODS_ROOT}/Target Support Files/Pods-Rocket/Pods-Rocket-resources.sh"'
          fi
      - name: "License Plist"
        path: /bin/sh
        script: |
          if [ $CONFIGURATION = "Debug" ]; then
            "${PODS_ROOT}/LicensePlist/license-plist" --output-path ${SRCROOT}/Targets/Rocket/Settings.bundle
          fi
    postBuildScripts:
      - name: "Crashlytics Logs"
        path: /bin/sh
        script: |
          ${PODS_ROOT}/FirebaseCrashlytics/run
        inputFiles: ['$(BUILT_PRODUCTS_DIR)/$(INFOPLIST_PATH)']
    dependencies:
      - framework: Pods_Rocket.framework
        implicit: true
        embed: false
      - package: Endpoint
      - target: Networking
      - target: UIComponent
      - target: InternalDomain
      - target: ImagePipeline
